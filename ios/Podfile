# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(
    File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__
  )
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. " \
          "If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end

  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. " \
        "Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(
  File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root
)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # 특수 패키지 필터링
  installer.pods_project.targets.each do |target|
    # Flutter 기본 설정 적용
    flutter_additional_ios_build_settings(target)
    
    # gRPC-Core 및 BoringSSL 관련 설정
    target.build_configurations.each do |config|
      # 모든 타겟에 공통 설정
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      
      # gRPC-Core 및 BoringSSL-GRPC 특수 설정
      if ['gRPC-Core', 'BoringSSL-GRPC', 'abseil'].include?(target.name)
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_SHADOW_BORINGSSL_SYMBOLS=1'
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++14'
        # 경고 제거 방식 변경 (GCC_WARN_INHIBIT_ALL_WARNINGS 대신 WARNING_CFLAGS 사용)
        config.build_settings.delete('GCC_WARN_INHIBIT_ALL_WARNINGS')
        config.build_settings['WARNING_CFLAGS'] = ['$(inherited)', '-w']
      else
        # 다른 타겟
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
      end
      
      config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
    end
  end
end
